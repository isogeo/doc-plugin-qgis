version: 2

defaults:
  workspace_root: &workspace_root
    ~/isogeo-help

  nodejs_container: &nodejs_container
    working_directory: *workspace_root
    docker:
      - image: circleci/node:8-stretch

  golang_container: &golang_container
    working_directory: *workspace_root
    docker:
      - image: circleci/golang:1-stretch

  filters: &default_filters
    tags:
      only: '/v[0-9]+(\.[0-9]+)*/'

  attach_workspace: &attach_workspace
    attach_workspace:
      at: *workspace_root

  restore_node_modules: &restore_node_modules
    restore_cache:
      name: Restore node_modules cache
      keys:
        - isogeo-help-node-{{ checksum "yarn.lock" }}
        - isogeo-help-

jobs:
  checkout:
    <<: *nodejs_container
    steps:
      - checkout

      - persist_to_workspace:
          root: *workspace_root
          paths:
            - ./

  install:
    <<: *nodejs_container
    steps:
      - *attach_workspace
      - *restore_node_modules

      - restore_cache:
          name: Restore yarn cache
          keys:
            - isogeo-help-yarn-{{ checksum "yarn.lock" }}
            - isogeo-help-yarn-

      - run:
          name: Install dependencies
          command: yarn

      - save_cache:
          name: Save yarn cache
          key: isogeo-help-yarn-{{ checksum "yarn.lock" }}
          paths:
            - ~/.cache/yarn/

      - save_cache:
          name: Save node_modules cache
          key: isogeo-help-node-{{ checksum "yarn.lock" }}
          paths:
            - node_modules/

  build:
    <<: *nodejs_container
    steps:
      - *attach_workspace
      - *restore_node_modules

      - run:
          name: Set latest gitbook alias
          command: yarn gitbook alias node_modules/gitbook latest

      - run:
          name: Build output bundles
          command: yarn gitbook build ./ dist/qgis/

      - persist_to_workspace:
          root: *workspace_root
          paths:
            - dist/

  changelog:
    <<: *nodejs_container
    steps:
      - *attach_workspace
      - *restore_node_modules

      - restore_cache:
          name: Restore changelog cache
          keys:
            - isogeo-help-changelog-{{ .BuildNum }}
            - isogeo-help-changelog-

      - run:
          name: Generate changelog
          command: |
            if [ $CIRCLE_TAG ]; then
              PREV_TAG=$(git describe --abbrev=0 --tags $CIRCLE_TAG^)
              echo "[+] Running for range $PREV_TAG...$CIRCLE_TAG"
              node_modules/.bin/lerna-changelog --from $PREV_TAG --to $CIRCLE_TAG > dist/qgis/CHANGELOG.md
            else
              PREV_TAG=$(git describe --abbrev=0 --tags)
              echo "[+] Running from $PREV_TAG"
              node_modules/.bin/lerna-changelog --from $PREV_TAG > dist/qgis/CHANGELOG.md
            fi

      - save_cache:
          name: Save changelog cache
          key: isogeo-help-changelog-{{ .BuildNum }}
          paths:
            - .changelog/

      - run:
          name: Display changelog
          command: cat dist/qgis/CHANGELOG.md

      - persist_to_workspace:
          name: Persist changelog
          root: *workspace_root
          paths:
            - dist/qgis/CHANGELOG.md

      - store_artifacts:
          path: dist/qgis/CHANGELOG.md
          destination: CHANGELOG.md

  release:
    <<: *golang_container
    steps:
      - *attach_workspace
      - *restore_node_modules

      - run:
          name: Install github-release
          command: go get github.com/aktau/github-release

      - run:
          name: Create GitHub release
          command: github-release release --user $CIRCLE_PROJECT_USERNAME --repo $CIRCLE_PROJECT_REPONAME --tag $CIRCLE_TAG --description "$(cat dist/qgis/CHANGELOG.md)" --name $CIRCLE_TAG


  deploy-qa:
    <<: *golang_container
    steps:
      - *attach_workspace

      - run:
          name: Rename robots.txt
          command: |
            mv dist/qgis/robots_qa.txt dist/qgis/robots.txt
            rm dist/qgis/robots_prod.txt

      - run:
          name: Install rclone
          command: go get github.com/ncw/rclone

      - deploy:
          name: Upload to Azure Blob Storage
          command: rclone sync dist/qgis qa:\$web/qgis --delete-after --exclude .circleci/ --exclude package.json --exclude yarn.lock

  deploy-prod:
    <<: *golang_container
    steps:
      - *attach_workspace

      - run:
          name: Rename robots.txt
          command: |
            mv dist/qgis/robots_prod.txt dist/qgis/robots.txt
            rm dist/qgis/robots_qa.txt

      - run:
          name: Install rclone
          command: go get github.com/ncw/rclone

      - deploy:
          name: Upload to Azure Blob Storage
          command: rclone sync dist/qgis prod:\$web/qgis --delete-after --exclude .circleci/ --exclude package.json --exclude yarn.lock


workflows:
  version: 2

  push:
    jobs:
      - checkout:
          filters: *default_filters

      - install:
          requires:
            - checkout
          filters: *default_filters

      - build:
          requires:
            - install
          filters: *default_filters

      - changelog:
          requires:
            - build
          filters: *default_filters

      - deploy-qa:
          requires:
            - build

      - deploy-prod:
          requires:
            - build
          filters:
            <<: *default_filters
            branches:
              ignore: /.*/

      - release:
          requires:
            - changelog
            - deploy-prod
          filters:
            <<: *default_filters
            branches:
              ignore: /.*/
